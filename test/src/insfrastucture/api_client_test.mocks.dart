// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_restfulapi/test/src/insfrastucture/api_client_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_restfulapi/library/library.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiRepo extends _i1.Mock implements _i2.ApiRepo {
  MockApiRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<Map<String, dynamic>> fetchData(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchData,
          [url],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}

/// A class which mocks [ApiCall].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiCall extends _i1.Mock implements _i2.ApiCall {
  MockApiCall() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<_i3.Either<_i2.Failure, Map<String, dynamic>>> get(String? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
        ),
        returnValue:
            _i4.Future<_i3.Either<_i2.Failure, Map<String, dynamic>>>.value(
                _FakeEither_1<_i2.Failure, Map<String, dynamic>>(
          this,
          Invocation.method(
            #get,
            [url],
          ),
        )),
      ) as _i4.Future<_i3.Either<_i2.Failure, Map<String, dynamic>>>);
}
